{"ast":null,"code":"export async function pageAcl({\n  site,\n  recordMap,\n  pageId\n}) {\n  var _recordMap$block$root;\n\n  if (!site) {\n    return {\n      error: {\n        statusCode: 404,\n        message: 'Unable to resolve notion site'\n      }\n    };\n  }\n\n  if (!recordMap) {\n    return {\n      error: {\n        statusCode: 404,\n        message: `Unable to resolve page for domain \"${site.domain}\". Notion page \"${pageId}\" not found.`\n      }\n    };\n  }\n\n  const keys = Object.keys(recordMap.block);\n  const rootKey = keys[0];\n\n  if (!rootKey) {\n    return {\n      error: {\n        statusCode: 404,\n        message: `Unable to resolve page for domain \"${site.domain}\". Notion page \"${pageId}\" invalid data.`\n      }\n    };\n  }\n\n  const rootValue = (_recordMap$block$root = recordMap.block[rootKey]) === null || _recordMap$block$root === void 0 ? void 0 : _recordMap$block$root.value;\n  const rootSpaceId = rootValue === null || rootValue === void 0 ? void 0 : rootValue.space_id;\n\n  if (rootSpaceId && site.rootNotionSpaceId && rootSpaceId !== site.rootNotionSpaceId) {\n    if (\"development\") {\n      return {\n        error: {\n          statusCode: 404,\n          message: `Notion page \"${pageId}\" doesn't belong to the Notion workspace owned by \"${site.domain}\".`\n        }\n      };\n    }\n  }\n}","map":{"version":3,"sources":["B:/jacko/Documents/JacksNewSiteCRM/jackoregankenny.com/NewOne/nextjs-notion-starter-kit/lib/acl.ts"],"names":["pageAcl","site","recordMap","pageId","error","statusCode","message","domain","keys","Object","block","rootKey","rootValue","value","rootSpaceId","space_id","rootNotionSpaceId"],"mappings":"AAEA,OAAO,eAAeA,OAAf,CAAuB;AAC5BC,EAAAA,IAD4B;AAE5BC,EAAAA,SAF4B;AAG5BC,EAAAA;AAH4B,CAAvB,EAI2B;AAAA;;AAChC,MAAI,CAACF,IAAL,EAAW;AACT,WAAO;AACLG,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,GADP;AAELC,QAAAA,OAAO,EAAE;AAFJ;AADF,KAAP;AAMD;;AAED,MAAI,CAACJ,SAAL,EAAgB;AACd,WAAO;AACLE,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,GADP;AAELC,QAAAA,OAAO,EAAG,sCAAqCL,IAAI,CAACM,MAAO,mBAAkBJ,MAAO;AAF/E;AADF,KAAP;AAMD;;AAED,QAAMK,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYN,SAAS,CAACQ,KAAtB,CAAb;AACA,QAAMC,OAAO,GAAGH,IAAI,CAAC,CAAD,CAApB;;AAEA,MAAI,CAACG,OAAL,EAAc;AACZ,WAAO;AACLP,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,GADP;AAELC,QAAAA,OAAO,EAAG,sCAAqCL,IAAI,CAACM,MAAO,mBAAkBJ,MAAO;AAF/E;AADF,KAAP;AAMD;;AAED,QAAMS,SAAS,4BAAGV,SAAS,CAACQ,KAAV,CAAgBC,OAAhB,CAAH,0DAAG,sBAA0BE,KAA5C;AACA,QAAMC,WAAW,GAAGF,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEG,QAA/B;;AAEA,MACED,WAAW,IACXb,IAAI,CAACe,iBADL,IAEAF,WAAW,KAAKb,IAAI,CAACe,iBAHvB,EAIE;AACA,uBAA0B;AACxB,aAAO;AACLZ,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,GADP;AAELC,UAAAA,OAAO,EAAG,gBAAeH,MAAO,sDAAqDF,IAAI,CAACM,MAAO;AAF5F;AADF,OAAP;AAMD;AACF;AACF","sourcesContent":["import { PageProps } from './types'\r\n\r\nexport async function pageAcl({\r\n  site,\r\n  recordMap,\r\n  pageId\r\n}: PageProps): Promise<PageProps> {\r\n  if (!site) {\r\n    return {\r\n      error: {\r\n        statusCode: 404,\r\n        message: 'Unable to resolve notion site'\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!recordMap) {\r\n    return {\r\n      error: {\r\n        statusCode: 404,\r\n        message: `Unable to resolve page for domain \"${site.domain}\". Notion page \"${pageId}\" not found.`\r\n      }\r\n    }\r\n  }\r\n\r\n  const keys = Object.keys(recordMap.block)\r\n  const rootKey = keys[0]\r\n\r\n  if (!rootKey) {\r\n    return {\r\n      error: {\r\n        statusCode: 404,\r\n        message: `Unable to resolve page for domain \"${site.domain}\". Notion page \"${pageId}\" invalid data.`\r\n      }\r\n    }\r\n  }\r\n\r\n  const rootValue = recordMap.block[rootKey]?.value\r\n  const rootSpaceId = rootValue?.space_id\r\n\r\n  if (\r\n    rootSpaceId &&\r\n    site.rootNotionSpaceId &&\r\n    rootSpaceId !== site.rootNotionSpaceId\r\n  ) {\r\n    if (process.env.NODE_ENV) {\r\n      return {\r\n        error: {\r\n          statusCode: 404,\r\n          message: `Notion page \"${pageId}\" doesn't belong to the Notion workspace owned by \"${site.domain}\".`\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}