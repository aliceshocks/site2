{"ast":null,"code":"import _defineProperty from \"B:/jacko/Documents/JacksNewSiteCRM/jackoregankenny.com/NewOne/nextjs-notion-starter-kit/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"B:\\\\jacko\\\\Documents\\\\JacksNewSiteCRM\\\\jackoregankenny.com\\\\NewOne\\\\nextjs-notion-starter-kit\\\\pages\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { NotionPage } from 'components';\nexport var __N_SSG = true;\nexport default function NotionDomainPage(props) {\n  return /*#__PURE__*/_jsxDEV(NotionPage, _objectSpread({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n}\n_c = NotionDomainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotionDomainPage\");","map":{"version":3,"sources":["B:/jacko/Documents/JacksNewSiteCRM/jackoregankenny.com/NewOne/nextjs-notion-starter-kit/pages/index.tsx"],"names":["React","NotionPage","NotionDomainPage","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,UAAT,QAA2B,YAA3B;;AAgBA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC9C,sBAAO,QAAC,UAAD,oBAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAFuBD,gB","sourcesContent":["import React from 'react'\r\nimport { domain } from 'lib/config'\r\nimport { resolveNotionPage } from 'lib/resolve-notion-page'\r\nimport { NotionPage } from 'components'\r\n\r\nexport const getStaticProps = async () => {\r\n  try {\r\n    const props = await resolveNotionPage(domain)\r\n\r\n    return { props, revalidate: 10 }\r\n  } catch (err) {\r\n    console.error('page error', domain, err)\r\n\r\n    // we don't want to publish the error version of this page, so\r\n    // let next.js know explicitly that incremental SSG failed\r\n    throw err\r\n  }\r\n}\r\n\r\nexport default function NotionDomainPage(props) {\r\n  return <NotionPage {...props} />\r\n}\r\n"]},"metadata":{},"sourceType":"module"}