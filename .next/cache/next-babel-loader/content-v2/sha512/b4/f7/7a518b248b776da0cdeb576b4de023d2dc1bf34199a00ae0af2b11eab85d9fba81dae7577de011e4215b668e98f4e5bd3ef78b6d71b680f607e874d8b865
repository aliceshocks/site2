{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"B:\\\\jacko\\\\Documents\\\\JacksNewSiteCRM\\\\jackoregankenny.com\\\\NewOne\\\\nextjs-notion-starter-kit\\\\components\\\\ReactUtterances.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styles from './styles.module.css';\nexport class ReactUtterances extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"reference\", void 0);\n\n    _defineProperty(this, \"scriptElement\", void 0);\n\n    if (props.issueMap === 'issue-term' && props.issueTerm === undefined) {\n      throw Error(\"Property 'issueTerm' must be provided with issueMap 'issue-term'\");\n    }\n\n    if (props.issueMap === 'issue-number' && props.issueNumber === undefined) {\n      throw Error(\"Property 'issueNumber' must be provided with issueMap 'issue-number'\");\n    }\n\n    this.reference = /*#__PURE__*/React.createRef();\n    this.state = {\n      pending: true\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    // this.scriptElement.setAttribute('theme', props.theme)\n    const iframe = document.querySelector('iframe.utterances-frame');\n\n    if (iframe) {\n      iframe.contentWindow.postMessage({\n        type: 'set-theme',\n        theme: props.theme\n      }, 'https://utteranc.es/');\n    }\n  }\n\n  componentDidMount() {\n    const {\n      repo,\n      issueMap,\n      issueTerm,\n      issueNumber,\n      label,\n      theme\n    } = this.props;\n    const scriptElement = document.createElement('script');\n    scriptElement.src = 'https://utteranc.es/client.js';\n    scriptElement.async = true;\n    scriptElement.defer = true;\n    scriptElement.setAttribute('repo', repo);\n    scriptElement.setAttribute('crossorigin', 'annonymous');\n    scriptElement.setAttribute('theme', theme);\n\n    scriptElement.onload = () => this.setState({\n      pending: false\n    });\n\n    if (label) {\n      scriptElement.setAttribute('label', label);\n    }\n\n    if (issueMap === 'issue-number') {\n      scriptElement.setAttribute('issue-number', issueNumber.toString());\n    } else if (issueMap === 'issue-term') {\n      scriptElement.setAttribute('issue-term', issueTerm);\n    } else {\n      scriptElement.setAttribute('issue-term', issueMap);\n    } // TODO: Check current availability\n\n\n    this.scriptElement = scriptElement;\n    this.reference.current.appendChild(scriptElement);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.comments,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.utterances,\n        ref: this.reference,\n        children: this.state.pending && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Comments...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["B:/jacko/Documents/JacksNewSiteCRM/jackoregankenny.com/NewOne/nextjs-notion-starter-kit/components/ReactUtterances.tsx"],"names":["React","styles","ReactUtterances","Component","constructor","props","issueMap","issueTerm","undefined","Error","issueNumber","reference","createRef","state","pending","UNSAFE_componentWillReceiveProps","iframe","document","querySelector","contentWindow","postMessage","type","theme","componentDidMount","repo","label","scriptElement","createElement","src","async","defer","setAttribute","onload","setState","toString","current","appendChild","render","comments","utterances"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AAgCA,OAAO,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAGL;AAIAC,EAAAA,WAAW,CAACC,KAAD,EAA8B;AACvC,UAAMA,KAAN;;AADuC;;AAAA;;AAGvC,QAAIA,KAAK,CAACC,QAAN,KAAmB,YAAnB,IAAmCD,KAAK,CAACE,SAAN,KAAoBC,SAA3D,EAAsE;AACpE,YAAMC,KAAK,CACT,kEADS,CAAX;AAGD;;AAED,QAAIJ,KAAK,CAACC,QAAN,KAAmB,cAAnB,IAAqCD,KAAK,CAACK,WAAN,KAAsBF,SAA/D,EAA0E;AACxE,YAAMC,KAAK,CACT,sEADS,CAAX;AAGD;;AAED,SAAKE,SAAL,gBAAiBX,KAAK,CAACY,SAAN,EAAjB;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAEDC,EAAAA,gCAAgC,CAACV,KAAD,EAAQ;AACtC;AACA,UAAMW,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,yBAAvB,CAAf;;AAEA,QAAIF,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACG,aAAP,CAAqBC,WAArB,CACE;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,KAAK,EAAEjB,KAAK,CAACiB;AAAlC,OADF,EAEE,sBAFF;AAID;AACF;;AAEDC,EAAAA,iBAAiB,GAAS;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQlB,MAAAA,QAAR;AAAkBC,MAAAA,SAAlB;AAA6BG,MAAAA,WAA7B;AAA0Ce,MAAAA,KAA1C;AAAiDH,MAAAA;AAAjD,QAA2D,KAAKjB,KAAtE;AACA,UAAMqB,aAAa,GAAGT,QAAQ,CAACU,aAAT,CAAuB,QAAvB,CAAtB;AACAD,IAAAA,aAAa,CAACE,GAAd,GAAoB,+BAApB;AACAF,IAAAA,aAAa,CAACG,KAAd,GAAsB,IAAtB;AACAH,IAAAA,aAAa,CAACI,KAAd,GAAsB,IAAtB;AACAJ,IAAAA,aAAa,CAACK,YAAd,CAA2B,MAA3B,EAAmCP,IAAnC;AACAE,IAAAA,aAAa,CAACK,YAAd,CAA2B,aAA3B,EAA0C,YAA1C;AACAL,IAAAA,aAAa,CAACK,YAAd,CAA2B,OAA3B,EAAoCT,KAApC;;AACAI,IAAAA,aAAa,CAACM,MAAd,GAAuB,MAAM,KAAKC,QAAL,CAAc;AAAEnB,MAAAA,OAAO,EAAE;AAAX,KAAd,CAA7B;;AAEA,QAAIW,KAAJ,EAAW;AACTC,MAAAA,aAAa,CAACK,YAAd,CAA2B,OAA3B,EAAoCN,KAApC;AACD;;AAED,QAAInB,QAAQ,KAAK,cAAjB,EAAiC;AAC/BoB,MAAAA,aAAa,CAACK,YAAd,CAA2B,cAA3B,EAA2CrB,WAAW,CAACwB,QAAZ,EAA3C;AACD,KAFD,MAEO,IAAI5B,QAAQ,KAAK,YAAjB,EAA+B;AACpCoB,MAAAA,aAAa,CAACK,YAAd,CAA2B,YAA3B,EAAyCxB,SAAzC;AACD,KAFM,MAEA;AACLmB,MAAAA,aAAa,CAACK,YAAd,CAA2B,YAA3B,EAAyCzB,QAAzC;AACD,KArBuB,CAuBxB;;;AACA,SAAKoB,aAAL,GAAqBA,aAArB;AACA,SAAKf,SAAL,CAAewB,OAAf,CAAuBC,WAAvB,CAAmCV,aAAnC;AACD;;AAEDW,EAAAA,MAAM,GAAuB;AAC3B,wBACE;AAAK,MAAA,SAAS,EAAEpC,MAAM,CAACqC,QAAvB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAErC,MAAM,CAACsC,UAAvB;AAAmC,QAAA,GAAG,EAAE,KAAK5B,SAA7C;AAAA,kBACG,KAAKE,KAAL,CAAWC,OAAX,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAvED","sourcesContent":["import React from 'react'\r\n\r\nimport styles from './styles.module.css'\r\n\r\nexport type MappingType =\r\n  | 'pathname'\r\n  | 'url'\r\n  | 'title'\r\n  | 'og:title'\r\n  | 'issue-number'\r\n  | 'issue-term'\r\n\r\nexport type Theme =\r\n  | 'github-light'\r\n  | 'github-dark'\r\n  | 'preferred-color-scheme'\r\n  | 'github-dark-orange'\r\n  | 'icy-dark'\r\n  | 'dark-blue'\r\n  | 'photon-dark'\r\n\r\ninterface ReactUtterancesProps {\r\n  repo: string\r\n  issueMap: MappingType\r\n  issueTerm?: string\r\n  issueNumber?: number\r\n  label?: string\r\n  theme: Theme\r\n}\r\n\r\ninterface ReactUtterancesState {\r\n  pending: boolean\r\n}\r\n\r\nexport class ReactUtterances extends React.Component<\r\n  ReactUtterancesProps,\r\n  ReactUtterancesState\r\n> {\r\n  reference: React.RefObject<HTMLDivElement>\r\n  scriptElement: any\r\n\r\n  constructor(props: ReactUtterancesProps) {\r\n    super(props)\r\n\r\n    if (props.issueMap === 'issue-term' && props.issueTerm === undefined) {\r\n      throw Error(\r\n        \"Property 'issueTerm' must be provided with issueMap 'issue-term'\"\r\n      )\r\n    }\r\n\r\n    if (props.issueMap === 'issue-number' && props.issueNumber === undefined) {\r\n      throw Error(\r\n        \"Property 'issueNumber' must be provided with issueMap 'issue-number'\"\r\n      )\r\n    }\r\n\r\n    this.reference = React.createRef<HTMLDivElement>()\r\n    this.state = { pending: true }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    // this.scriptElement.setAttribute('theme', props.theme)\r\n    const iframe = document.querySelector('iframe.utterances-frame') as any\r\n\r\n    if (iframe) {\r\n      iframe.contentWindow.postMessage(\r\n        { type: 'set-theme', theme: props.theme },\r\n        'https://utteranc.es/'\r\n      )\r\n    }\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    const { repo, issueMap, issueTerm, issueNumber, label, theme } = this.props\r\n    const scriptElement = document.createElement('script')\r\n    scriptElement.src = 'https://utteranc.es/client.js'\r\n    scriptElement.async = true\r\n    scriptElement.defer = true\r\n    scriptElement.setAttribute('repo', repo)\r\n    scriptElement.setAttribute('crossorigin', 'annonymous')\r\n    scriptElement.setAttribute('theme', theme)\r\n    scriptElement.onload = () => this.setState({ pending: false })\r\n\r\n    if (label) {\r\n      scriptElement.setAttribute('label', label)\r\n    }\r\n\r\n    if (issueMap === 'issue-number') {\r\n      scriptElement.setAttribute('issue-number', issueNumber.toString())\r\n    } else if (issueMap === 'issue-term') {\r\n      scriptElement.setAttribute('issue-term', issueTerm)\r\n    } else {\r\n      scriptElement.setAttribute('issue-term', issueMap)\r\n    }\r\n\r\n    // TODO: Check current availability\r\n    this.scriptElement = scriptElement\r\n    this.reference.current.appendChild(scriptElement)\r\n  }\r\n\r\n  render(): React.ReactElement {\r\n    return (\r\n      <div className={styles.comments}>\r\n        <div className={styles.utterances} ref={this.reference}>\r\n          {this.state.pending && <p>Loading Comments...</p>}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}